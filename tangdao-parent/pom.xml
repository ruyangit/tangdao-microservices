<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>tangdao-parent</artifactId>
	<packaging>pom</packaging>

	<parent>
		<groupId>com.tangdao</groupId>
		<artifactId>tangdao-microservices</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../</relativePath>
	</parent>

	<name>Tangdao Parent</name>
	<inceptionYear>2019-Now</inceptionYear>

	<properties>
		<java.version>1.8</java.version>
		<main.basedir>${basedir}/..</main.basedir>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<eclipse-plugin-download-sources>false</eclipse-plugin-download-sources>
		<eclipse-plugin-download-javadocs>false</eclipse-plugin-download-javadocs>

		<!-- Plugin versions -->
		<build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
		<flatten-maven-plugin.version>1.0.1</flatten-maven-plugin.version>
		<xml-maven-plugin.version>1.0.2</xml-maven-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-jar-plugin.version>3.1.2</maven-jar-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-war-plugin.version>3.1.0</maven-war-plugin.version>

		<maven.test.skip>true</maven.test.skip>

		<!-- Spring versions -->
		<spring-cloud-dependencies.version>Hoxton.RELEASE</spring-cloud-dependencies.version>
		<spring-cloud-alibaba-dependencies.version>2.1.1.RELEASE</spring-cloud-alibaba-dependencies.version>
		<spring-boot-dependencies.version>2.2.1.RELEASE</spring-boot-dependencies.version>
		<spring-boot-admin.version>2.1.6</spring-boot-admin.version>
		<spring-boot-maven-plugin.version>2.1.1.RELEASE</spring-boot-maven-plugin.version>

		<!-- Docker versions -->
		<docker-maven-plugin.version>1.2.0</docker-maven-plugin.version>
		<docker.registryUrl>http://192.168.113.105:2375</docker.registryUrl>
		<docker.baseImage>frolvlad/alpine-java:jdk8-slim</docker.baseImage>
		<docker.volumes>/tmp</docker.volumes>
		<docker.image.prefix>hub.k8s.com/microservices</docker.image.prefix>
		<docker.java.security.egd>-Djava.security.egd=file:/dev/./urandom</docker.java.security.egd>
		<docker.java.opts>-Xms128m -Xmx128m</docker.java.opts>

		<!-- Apache Commons -->
		<commons-collections4.version>4.2</commons-collections4.version>
		<commons-text.version>1.4</commons-text.version>
		<commons-beanutils.version>1.9.3</commons-beanutils.version>
		<commons-io.version>2.5</commons-io.version>
		<commons-fileupload.version>1.3.1</commons-fileupload.version>
		<commons-math3.version>3.6.1</commons-math3.version>

		<!-- More -->
		<patchca.version>1.1.0</patchca.version>
		<thumbnailator.version>0.4.8</thumbnailator.version>
		<jfinal.version>3.8</jfinal.version>
		<jodconverter-local.version>4.2.2</jodconverter-local.version>
		<fastjson.version>1.2.62</fastjson.version>
		<jsr305.version>3.0.2</jsr305.version>
		<bitwalker.version>1.20</bitwalker.version>
		<fst.version>2.56</fst.version>
		<poi.version>3.14</poi.version>
		<ant.version>1.9.7</ant.version>
		<pagehelper.version>5.1.8</pagehelper.version>
		<jsonwebtoken.version>0.9.1</jsonwebtoken.version>
		<hibernate-validator.version>6.0.13.Final</hibernate-validator.version>
		<jmimemagic.version>0.1.3</jmimemagic.version>
		<lettuce.version>5.1.8.RELEASE</lettuce.version>
		<transmittable-thread-local.version>2.11.0</transmittable-thread-local.version>

		<!-- Db D -->
		<mysql.version>5.1.46</mysql.version>
		<ojdbc6.version>11.2.0.3</ojdbc6.version>
		<sqljdbc4.version>4.0</sqljdbc4.version>

		<!-- Mybatis -->
		<mybatis-spring-boot.version>1.3.2</mybatis-spring-boot.version>
		<mapper-spring-boot.version>2.1.5</mapper-spring-boot.version>

		<!-- Druid -->
		<druid-spring-boot.version>1.1.9</druid-spring-boot.version>
		<druid.version>1.1.9</druid.version>

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-server</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>${basedir}/src/main/resources</directory>
				<includes>
					<include>**/application*.yml</include>
					<include>**/application*.yaml</include>
					<include>**/application*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>**/application*.yml</exclude>
					<exclude>**/application*.yaml</exclude>
					<exclude>**/application*.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<!-- Compiler 插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<showWarnings>true</showWarnings>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<archive>
							<manifest>
								<mainClass>${start-class}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
					<configuration>
						<archive>
							<manifest>
								<mainClass>${start-class}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<delimiters>
							<delimiter>${resource.delimiter}</delimiter>
						</delimiters>
						<useDefaultDelimiters>false</useDefaultDelimiters>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-maven-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<mainClass>${start-class}</mainClass>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
					<configuration>
						<serverId>docker-registry</serverId>
						<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
						<imageTags>
							<imageTag>${revision}</imageTag>
							<imageTag>latest</imageTag>
						</imageTags>
						<registryUrl>${docker.registryUrl}</registryUrl>
						<dockerHost>${docker.registryUrl}</dockerHost>
						<forceTags>true</forceTags>
						<dockerDirectory>${project.basedir}/</dockerDirectory>
						<baseImage>${docker.baseImage}</baseImage>
						<volumes>${docker.volumes}</volumes>
						<env>
							<JAVA_OPTS>${docker.java.opts}</JAVA_OPTS>
						</env>
						<entryPoint>["sh","-c","java
							$JAVA_OPTS ${docker.java.security.egd}
							-jar
							/${project.build.finalName}.jar"]</entryPoint>
						<resources>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
						</resources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<id>aliyun-repos</id>
			<name>Aliyun Repository</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>sonatype-repos</id>
			<name>Sonatype Repository</name>
			<url>https://oss.sonatype.org/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>